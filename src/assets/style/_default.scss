#__nuxt,
#__layout {
  width: 100%;
  min-height: 100vh;
}

#nuxt-loading {
  will-change: opacity;

  & > div {
    will-change: transform;
  }
}

body {
  overscroll-behavior-y: none;
  font-family: $mainFontFamily;
  color: $black2;
  width: 100%;
  min-height: 100vh;
  @media (max-width: $mobile) {
    font-size: 1rem;
  }
}

a {
  &:hover {
    color: darken($violet, .5)
  }
}

head {
  display: none;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

.desktopOnly {
  @media screen and (max-width: ($mobile+1)) {
    display: none !important;
  }
}

.mobileOnly {
  @media screen and (min-width: $mobile) {
    display: none !important;
  }
}

.customScrollList {
  position: relative;
  overflow: auto;
  width: calc(100% + 10px);
  padding-right: 10px;

  .scrollDownIcon {
    position: sticky;
    left: 50%;
    bottom: 5px;
    transform: translateX(-50%);
    background-color: transparentize($color: $white, $amount: 0.2);
    width: 25px;
    height: 25px;
    border-radius: 50%;
    border: 1px solid $light;
    color: $light;
    font-size: 13px;
    line-height: 25px;
    text-align: center;
    transition: $transition;
    transition-property: color, border-color, background-color, transform;
    cursor: pointer;
    &:hover {
      color: $gray;
      border-color: $gray;
      background-color: lighten($color: $light, $amount: 5);
    }
    &:active {
      transition-duration: 0.001s;
      color: $light;
      border-color: $light;
      background-color: transparentize($color: $white, $amount: 0.2);
    }
    &.scrolledDown {
      transform: translateX(-50%) rotate(180deg); 
    }
  }
}

.iconBtn {
  color: $violet;
  cursor: pointer;
  transition: $transition;
  &:disabled {
    opacity: 0.7;
    cursor: default;
  }
  &:not(:disabled):active {
    transition-duration: 0.001s;
    color: $violet;
  }
  &:not(:disabled):hover {
    color: $lightViolet;
  }
}

.fitRightSide {
  z-index: 1;
  width: 57% !important;
  left: 43% !important;

  @media screen and (min-width: 1300px) {
    left: 600px !important;
    width: calc(100% - 600px) !important;
  }
}

/**
 * New common element
 */
.brandContainer {
  width: max-content;
  position: relative;

  .networkName {
    position: absolute;
    left: 100%;
    top: -0.4em;

    @media screen and (max-width: $mobile) {
      @apply transform -translate-x-1/2 -translate-y-3;
    }
  }
}